/* esm.sh - esbuild bundle(nth-check@2.1.1) deno production */
var b=new Set([9,10,12,13,32]),l="0".charCodeAt(0),A="9".charCodeAt(0);function u(e){if(e=e.trim().toLowerCase(),e==="even")return[2,0];if(e==="odd")return[2,1];let t=0,n=0,i=r(),c=o();if(t<e.length&&e.charAt(t)==="n"&&(t++,n=i*(c??1),h(),t<e.length?(i=r(),h(),c=o()):i=c=0),c===null||t<e.length)throw new Error(`n-th rule couldn't be parsed ('${e}')`);return[n,i*c];function r(){return e.charAt(t)==="-"?(t++,-1):(e.charAt(t)==="+"&&t++,1)}function o(){let f=t,s=0;for(;t<e.length&&e.charCodeAt(t)>=l&&e.charCodeAt(t)<=A;)s=s*10+(e.charCodeAt(t)-l),t++;return t===f?null:s}function h(){for(;t<e.length&&b.has(e.charCodeAt(t));)t++}}import a from"/v106/boolbase@1.0.0/deno/boolbase.js";function p(e){let t=e[0],n=e[1]-1;if(n<0&&t<=0)return a.falseFunc;if(t===-1)return r=>r<=n;if(t===0)return r=>r===n;if(t===1)return n<0?a.trueFunc:r=>r>=n;let i=Math.abs(t),c=(n%i+i)%i;return t>1?r=>r>=n&&r%i===c:r=>r<=n&&r%i===c}function d(e){let t=e[0],n=e[1]-1,i=0;if(t<0){let c=-t,r=(n%c+c)%c;return()=>{let o=r+c*i++;return o>n?null:o}}return t===0?n<0?()=>null:()=>i++===0?n:null:(n<0&&(n+=t*Math.ceil(-n/t)),()=>t*i+++n)}function g(e){return p(u(e))}function M(e){return d(u(e))}export{p as compile,g as default,d as generate,u as parse,M as sequence};
